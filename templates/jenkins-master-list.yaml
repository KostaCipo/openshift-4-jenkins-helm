apiVersion: v1
kind: List
items:
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: {{ template "jenkins.fullname" . }}
    labels:
      "app.kubernetes.io/name": '{{ template "jenkins.name" .}}'
      "helm.sh/chart": "{{ .Chart.Name }}-{{ .Chart.Version }}"
      "app.kubernetes.io/managed-by": "{{ .Release.Service }}"
      "app.kubernetes.io/instance": "{{ .Release.Name }}"
      "app.kubernetes.io/component": "{{ .Values.master.componentName }}"

- kind: RoleBinding
  apiVersion: rbac.authorization.k8s.io/v1
  metadata:
    name: {{ template "jenkins.fullname" . }}-edit
    labels:
      "app.kubernetes.io/name": '{{ template "jenkins.name" .}}'
      "helm.sh/chart": "{{ .Chart.Name }}-{{ .Chart.Version }}"
      "app.kubernetes.io/managed-by": "{{ .Release.Service }}"
      "app.kubernetes.io/instance": "{{ .Release.Name }}"
      "app.kubernetes.io/component": "{{ .Values.master.componentName }}"
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: edit
  subjects:
  - kind: ServiceAccount
    name: {{ template "jenkins.fullname" . }}

- apiVersion: v1
  kind: Service
  metadata:
    name: {{ template "jenkins.fullname" . }}
    labels:
      "app.kubernetes.io/name": '{{ template "jenkins.name" .}}'
      "helm.sh/chart": "{{ .Chart.Name }}-{{ .Chart.Version }}"
      "app.kubernetes.io/managed-by": "{{ .Release.Service }}"
      "app.kubernetes.io/instance": "{{ .Release.Name }}"
      "app.kubernetes.io/component": "{{ .Values.master.componentName }}"
  spec:
    ports:
    - port: 8080
      name: http
      targetPort: 8080
    selector:
      "app.kubernetes.io/component": "{{ .Values.master.componentName }}"
      "app.kubernetes.io/instance": "{{ .Release.Name }}"
    type: ClusterIP

# Waiting on resolution of this bug: https://bugzilla.redhat.com/show_bug.cgi?id=1773682
#- apiVersion: route.openshift.io/v1
#  kind: Route
#  metadata:
#    labels:
#      app: {{ template "jenkins.fullname" . }}
#      chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
#      release: "{{ .Release.Name }}"
#      heritage: "{{ .Release.Service }}"
#      component: "{{ .Release.Name }}-{{ .Values.master.componentName }}"
#    name: {{ template "jenkins.fullname" . }}
#  spec:
#    host: ""
#    port:
#      targetPort: http
#    tls:
#      insecureEdgeTerminationPolicy: Redirect
#      termination: edge
#    to:
#      kind: Service
#      name: {{ template "jenkins.fullname" . }}
#      weight: 100
#  status:

- kind: BuildConfig
  apiVersion: build.openshift.io/v1
  metadata:
    name: modern-webapp
    labels:
      app: modern-webapp
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: 'modern-webapp:latest'
    successfulBuildsHistoryLimit: 5
    failedBuildsHistoryLimit: 5
    strategy:
      type: Source
      sourceStrategy:
        from:
          kind: ImageStreamTag
          namespace: openshift
          name: 'modern-webapp:10.x'
    source:
      type: Git
      git:
        uri: {{ .Values.config.s2iUri }}
        ref: master
    triggers:
    - type: ConfigChange

- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: {{ template "jenkins.fullname" . }}-casc-config
    labels:
      "app.kubernetes.io/name": '{{ template "jenkins.name" .}}'
      "helm.sh/chart": "{{ .Chart.Name }}-{{ .Chart.Version }}"
      "app.kubernetes.io/managed-by": "{{ .Release.Service }}"
      "app.kubernetes.io/instance": "{{ .Release.Name }}"
      "app.kubernetes.io/component": "{{ .Values.master.componentName }}"
      {{ template "jenkins.fullname" . }}-jenkins-config: "true"
  data:
    jcasc-default-config.yaml: |-
      jenkins:
        disableRememberMe: false
        mode: NORMAL
        numExecutors: 0
        projectNamingStrategy: "standard"
        clouds:
      security:
        apiToken:
          creationOfLegacyTokenEnabled: false
          tokenGenerationOnCreationEnabled: false
          usageStatisticsEnabled: true

- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: {{ template "jenkins.fullname" . }}-jobs
    labels:
      "app.kubernetes.io/name": '{{ template "jenkins.name" .}}'
      "helm.sh/chart": "{{ .Chart.Name }}-{{ .Chart.Version }}"
      "app.kubernetes.io/managed-by": "{{ .Release.Service }}"
      "app.kubernetes.io/instance": "{{ .Release.Name }}"
      "app.kubernetes.io/component": "{{ .Values.master.componentName }}"
      {{ template "jenkins.fullname" . }}-jenkins-config: "true"
  data:
    jcasc-default-config.yaml: |-
      jenkins:
        disableRememberMe: false
        mode: NORMAL
        numExecutors: 0
        projectNamingStrategy: "standard"
        clouds:
      security:
        apiToken:
          creationOfLegacyTokenEnabled: false
          tokenGenerationOnCreationEnabled: false
          usageStatisticsEnabled: true
      openShift:
          clusterConfigs:
          - credentialsId: "test-ose-jenkins"
            name: "cluster_a"
            serverUrl: "https://api.shared-rhpds.rhpds.openshift.opentlc.com:6443"
            skipTlsVerify: true

- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: {{ template "jenkins.fullname" . }}
    labels:
      "app.kubernetes.io/name": '{{ template "jenkins.name" .}}'
      "helm.sh/chart": "{{ .Chart.Name }}-{{ .Chart.Version }}"
      "app.kubernetes.io/managed-by": "{{ .Release.Service }}"
      "app.kubernetes.io/instance": "{{ .Release.Name }}"
      "app.kubernetes.io/component": "{{ .Values.master.componentName }}"
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 8Gi

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: {{ template "jenkins.fullname" . }}
    labels:
      "app.kubernetes.io/name": '{{ template "jenkins.name" .}}'
      "helm.sh/chart": "{{ .Chart.Name }}-{{ .Chart.Version }}"
      "app.kubernetes.io/managed-by": "{{ .Release.Service }}"
      "app.kubernetes.io/instance": "{{ .Release.Name }}"
      "app.kubernetes.io/component": "{{ .Values.master.componentName }}"
  spec:
    replicas: 1
    strategy:
      type: Recreate
    selector:
      matchLabels:
        "app.kubernetes.io/component": "{{ .Values.master.componentName }}"
        "app.kubernetes.io/instance": "{{ .Release.Name }}"
    template:
      metadata:
        labels:
          "app.kubernetes.io/name": '{{ template "jenkins.name" .}}'
          "helm.sh/chart": "{{ .Chart.Name }}-{{ .Chart.Version }}"
          "app.kubernetes.io/managed-by": "{{ .Release.Service }}"
          "app.kubernetes.io/instance": "{{ .Release.Name }}"
          "app.kubernetes.io/component": "{{ .Values.master.componentName }}"
      spec:
        serviceAccountName: {{ template "jenkins.fullname" . }}
        containers:
        - name: jenkins
          image: "{{ .Values.master.image }}:{{ .Values.master.imageTag }}"
          imagePullPolicy: Always
          # https://github.com/openshift/jenkins#environment-variables
          env:
          - name: JENKINS_PASSWORD
            value: "mVvckH$9x@O%GgT7l2&fI2g"
#          - name: OPENSHIFT_ENABLE_OAUTH
#            value: "false"
#          - name: OPENSHIFT_ENABLE_REDIRECT_PROMPT
#            value: "false"
#          - name: KUBERNETES_MASTER
#            value: "https://kubernetes.default:443"
#          - name: KUBERNETES_TRUST_CERTIFICATES
#            value: "true"
          - name: JENKINS_SERVICE_NAME
            value: '{{ template "jenkins.fullname" . }}'
          - name: JNLP_SERVICE_NAME
            value: '{{ template "jenkins.fullname" . }}-jnlp'
          - name: INSTALL_PLUGINS
            value: "configuration-as-code:1.33,openshift-client:1.0.32"
          - name: CASC_JENKINS_CONFIG
            value: /var/lib/jenkins/casc_configs
          readinessProbe:
            httpGet:
              path: "{{ default "" .Values.master.jenkinsUriPrefix }}/login"
              port: 8080
            initialDelaySeconds: {{ .Values.master.healthProbeReadinessInitialDelay }}
            periodSeconds: {{ .Values.master.healthProbeReadinessPeriodSeconds }}
            timeoutSeconds: {{ .Values.master.healthProbesReadinessTimeout }}
            failureThreshold: {{ .Values.master.healthProbeReadinessFailureThreshold }}
          volumeMounts:
          - name: jenkins-data
            mountPath: /var/lib/jenkins
          - name: casc-jenkins-config
            mountPath: /var/lib/jenkins/casc_configs
        volumes:
        - name: jenkins-data
          persistentVolumeClaim:
            claimName: {{ template "jenkins.fullname" . }}
        - name: casc-jenkins-config
          configMap:
            name: {{ template "jenkins.fullname" . }}-casc-config
